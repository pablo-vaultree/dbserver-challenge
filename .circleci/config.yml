version: 2
jobs:
  build-api:
    docker:
      - image: circleci/node:8

    working_directory: ~/dbserver-challenge/

    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - run:
          working_directory: api
          name: show files
          command: 'ls -a'
      - restore_cache:
          key: dependency-cachev2-{{ checksum "api/package.json" }}
      - run:
          working_directory: api
          name: Install npm wee
          command: npm install
      - save_cache:
          key: dependency-cachev2-{{ checksum "api/package.json" }}
          paths:
            - api/node_modules

  build-frontend:
    docker:
      - image: circleci/node:8

    working_directory: ~/dbserver-challenge
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cachev2-{{ checksum "/frontend-app/package.json" }}
      - run:
          working_directory: frontend-app
          name: Install npm wee
          command: npm install
      - save_cache:
          working_directory: frontend-app
          key: dependency-cachev2-{{ checksum "package.json" }}
          paths:
            - frontend-app/node_modules

  test-api:
    docker:
      - image: circleci/node:8

    working_directory: ~/dbserver-challenge/

    steps:
      - checkout
      - restore_cache:
          key: dependency-cachev2-{{ checksum "api/package.json" }}
      - run:
          working_directory: api
          name: Test
          command: npm test

  test-frontend:
    docker:
      - image: circleci/node:8

    working_directory: ~/dbserver-challenge/

    steps:
      - checkout
      - restore_cache:
          key: dependency-cachev2-{{ checksum "frontend-app/package.json" }}
      - run:
          working_directory: frontend-app
          name: Test
          command: npm test

workflows:
  version: 2
  build_and_test-api:
    jobs:
      - build-api
      - test-api:
          requires:
            - build-api

  build_and_test-frontend:
    jobs:
      - build-frontend
      - test-frontend:
          requires:
            - build-frontend
