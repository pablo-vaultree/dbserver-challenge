version: 2
jobs:
  build-api:
    docker:
      - image: circleci/node:4.8.2-jessie

    working_directory: ~/dbserver-challenge/api

    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules

  build-frontend:
    docker:
      - image: circleci/node:4.8.2-jessie

    working_directory: ~/dbserver-challenge/frontend-app
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules

  test-api:
    docker:
      - image: circleci/node:4.8.2-jessie

    working_directory: ~/dbserver-challenge/api

    steps:
      - checkout
      - run:
          name: Test
          command: npm test
      - run:
          name: Test
          command: npm test
      - run:
          name: Generate code coverage
          command: './node_modules/.bin/nyc report --reporter=text-lcov'
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage

workflows:
  version: 2
  build_and_test: # name of your workflow
    jobs:
      - build-api:
      - test-api:
        requires:
           - build-api
